# MailClient.py
from socket import *
import base64

# 主要交互界面， 包括选择发送接收方的地址和文本内容
mailServer = "smtp.163.com"  # 使用163邮箱以及其服务

# 获取邮件相关信息
print('Please input your email address:')
sourceAddress: str = input()
print('Please input your authorization code')
authorization: str = input()
print('Please input email address of the receiver:')
desAddress: str = input()
print('Please input the subject of the mail:')
subject: str = input()
contentType = "text/plain"
print('Please input the text of the mail:')
txt: str = input()
end = "\r\n.\r\n"

# 发送方验证信息。
# 由于邮箱输入信息会使用base64编码，因此需要进行编码
username = str(base64.b64encode(sourceAddress.encode('utf-8')), 'utf-8')
password = str(base64.b64encode(authorization.encode('utf-8')), 'utf-8')

# 创建客户端套接字并建立连接
serverPort = 25  # SMTP使用25号端口
clientSocket = socket(AF_INET, SOCK_STREAM)
clientSocket.connect((mailServer, serverPort))

# 从客户套接字中接收信息
recv = clientSocket.recv(1024).decode()
print(recv)
if '220' != recv[:3]:
    print('Command 220 no response')
# 发送 HELO 命令并且打印服务端回复
# 服务器返回状态码250,说明请求完成
word = 'HELO man\r\n'
clientSocket.send(word.encode())
recv1 = clientSocket.recv(1024).decode()
print(recv1)
if '250' != recv1[:3]:
    print('Command 250 no response')

# 发送"AUTH LOGIN"验证身份.服务器返回状态码334
clientSocket.sendall('AUTH LOGIN\r\n'.encode())
recv2 = clientSocket.recv(1024).decode()
print(recv2)
if '334' != recv2[:3]:
    print('Command 334 no response')

# 发送验证信息
clientSocket.sendall((username + '\r\n').encode())
recvUsername = clientSocket.recv(1024).decode()
print(recvUsername)
if '334' != recvUsername[:3]:
    print('Command 334 no response')
clientSocket.sendall((password + '\r\n').encode())
recvPassword = clientSocket.recv(1024).decode()
print(recvPassword)

# 验证成功，服务器返回状态码235
if '235' != recvPassword[:3]:
    print('Command 235 no response')

# 发送 MAIL FROM 命令，并包含发件人邮箱地址
clientSocket.sendall(('MAIL FROM: <' + sourceAddress + '>\r\n').encode())
recvFrom = clientSocket.recv(1024).decode()
print(recvFrom)
if '250' != recvFrom[:3]:
    print('Command 250 no response')

# 发送 RCPT TO 命令，并包含收件人邮箱地址，返回状态码 250
clientSocket.sendall(('RCPT TO: <' + desAddress + '>\r\n').encode())
recvTo = clientSocket.recv(1024).decode()
print(recvTo)
if '250' != recvTo[:3]:
    print('Command 250 no response')

# 发送 DATA 命令,服务器返回状态码354
clientSocket.send('DATA\r\n'.encode())
recvData = clientSocket.recv(1024).decode()
print(recvData)
if '354' != recvData[:3]:
    print('Command 354 no response')

# 处理邮件信息
message = 'from:' + sourceAddress + '\r\n' \
          + 'to:' + desAddress + '\r\n' \
          + 'subject:' + subject + '\r\n' \
          + 'Content-Type:' + contentType + '\t\n' \
          + '\r\n' + txt
clientSocket.sendall(message.encode())

# 以"."结束。请求成功返回 250
clientSocket.sendall(end.encode())
recvEnd = clientSocket.recv(1024).decode()
print(recvEnd)
if '250' != recvEnd[:3]:
    print('Command 250 no response')

# QUIT命令 断开连接
clientSocket.sendall('QUIT\r\n'.encode())

clientSocket.close()
